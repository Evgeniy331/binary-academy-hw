0. https://github.com/AccForTest/Test-project

1. 1) git log master..develop-feature1 develop..develop-feature1 --no-merges --date-order --pretty=format:'%s - %an' --since="3 hours"
   выводит сообщения и автора всех коммитов из ветки develop-feature1, которые сделаны за последние 3 часа 
   и которых нет в родительских ветках (develop, master). Сортировка по дате, первые более новые.

   2) git log develop master --grep="6:" --pretty=format:'%ar: %s - %an' --date-order
   выводит для каждого коммита из веток master, develop, в сообщении которых есть упоминание заданного 
   номера задачи (номера 6 в моем случае), его сообщение, автора и дату. Сортировка по дате, первые более новые.
   --grep="6:" выполняет поиск коммита с номером задачи 6
   :я добавил так как этот символ должен идти после номера, чтобы искать именно номер задачи а не цифру 6 в сообщении.
   
   --pretty=format 
   форматирование вывода

   Аргументы:
   %ar - относительная дата
   %s - сообщение
   %an - автор

2. 
   Перейти на нужную ветку
   git checkout develop 
   
   Узнать краткий хеш тег нужного коммита
   git log -abbrev-commit
   
   Применить следующую команду с хешем нужного коммита
   git cherry-pick 1ad8c00

3. 
   Использовать команду git rebase -i HEAD~n чтобы отобразить список последних n коммитов в текстовом редакторе
   либо git -rebase -i --root чтобы отобразить список всех коммитов в текстовом редакторе
   Далее заменить pick  на reword рядом с каждым коммитом который нужно изменить.
   Сохранить и закрыть файл со списком коммитов.
   Далее будет открыт текстовый файл для каждого выбранного коммита в котором можно будет отредактировать сообщение,
   вводим новое сообщение для каждого выбранного коммита, сохраняем и закрываем каждый открытый файл.
   Чтобы сохранить изменения применяем команду git push --force.